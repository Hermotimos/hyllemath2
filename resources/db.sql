CREATE SCHEMA IF NOT EXISTS res;
-- drop schema res cascade;

-- TODO planowałem tutaj wielkie porządki, w sumie wystarczy wpisać bardziej zgranularyzowane ścieżki,
-- ex. characters/profile, characters/main etc.
CREATE TYPE res.Category AS ENUM(
  'characters',
  'locations',
  'items',
  'creatures',
  'symbols',
  'varia'
);


-- ==========================================


-- DROP TABLE IF EXISTS res.Tag CASCADE;
CREATE TABLE res.Tag (
  id INT GENERATED BY DEFAULT AS IDENTITY,
  authorid INT,
  title VARCHAR(50) NOT NULL,
  color VARCHAR(50) NOT NULL DEFAULT '#000000',
  -- ---------------------
  CONSTRAINT res_tag_pk       PRIMARY KEY (id),
  CONSTRAINT res_tag_user_fk  FOREIGN KEY (authorid) REFERENCES public.Users_User(id) ON DELETE CASCADE
);
CREATE INDEX res_tag_authorid_ix ON res.Tag USING btree (authorid);


-- ==========================================


-- DROP TABLE IF EXISTS res.Picture CASCADE;
CREATE TABLE res.Picture (
  id INT GENERATED BY DEFAULT AS IDENTITY,
  category res.Category NOT NULL,          -- is it necessary for determining saving location?
  image VARCHAR(100),
  title VARCHAR(100) NOT NULL,
  -- iconcolor VARCHAR(15)      -- może inny mechanizm kolorowanie ikon na obrazkach ?
  -- ---------------------
  CONSTRAINT res_picture_pk       PRIMARY KEY (id),
  CONSTRAINT res_picture_title_uq UNIQUE (title)
);

